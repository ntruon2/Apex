{"version":3,"sources":["logo.svg","lookup/components.js","blogs/buttons.js","blogs/lookup.js","blogs/create.js","blogs/detail.js","blogs/list.js","blogs/components.js","App.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","send","ActionBtn","props","blog","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","blogId","id","apiBlogAction","BlogCreate","textAreaRef","React","createRef","didBlog","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","ParentBlog","parent","Blog","hideActions","didReblog","useState","actionBlog","setActionBlog","match","pathname","urlBlogId","groups","blogid","isDetail","handlePerformAction","newActionBlog","Fragment","BlogsList","blogsInit","setBlogsInit","blogs","setBlogs","blogsDidSet","setBlogsDidSet","useEffect","final","newBlogs","concat","username","apiBlogList","handleDidReblog","newBlog","updateBlogsInit","unshift","updateFinalBlogs","map","item","index","BlogsComponent","setNewBlogs","canBlog","tempNewBlogs","BlogDetailComponent","didLookup","setDidLookup","setBlog","handleBackendLookup","apiBlogDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","blogsEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd92336b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n","import React from 'react'\r\n\r\nimport {apiBlogAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {blog, action, didPerformAction} = props\r\n    const likes = blog.likes ? blog.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) =>{\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiBlogAction(blog.id, action.type, handleActionBackendEvent)\r\n\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiBlogCreate(newBlog, callback){\r\n    backendLookup(\"POST\", \"/blogs/create/\", callback, {content: newBlog})\r\n  }\r\n\r\nexport function apiBlogAction(blogId, action, callback){\r\n    const data = {id: blogId, action: action}\r\n    backendLookup(\"POST\", \"/blogs/action/\", callback, data)\r\n}\r\n\r\nexport function apiBlogDetail(blogId, callback) {\r\n    backendLookup(\"GET\", `/blogs/${blogId}/`, callback)\r\n}\r\n\r\n\r\nexport function apiBlogList(username, callback) {\r\n    let endpoint =  \"/blogs/\"\r\n    if (username){\r\n        endpoint =  `/blogs/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n","import React from 'react'\r\nimport {apiBlogCreate} from './lookup'\r\n\r\n\r\nexport function BlogCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didBlog} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didBlog(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiBlogCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='blog'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Blog</button>\r\n        </form>\r\n  </div>\r\n}\r\n","\r\nimport React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentBlog(props){\r\n    const {blog} = props\r\n    return blog.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n      <p className='mb-0 text-muted small'>Reblog</p>\r\n      <Blog hideActions className={' '} blog={blog.parent} />\r\n    </div>\r\n    </div> : null\r\n  }\r\n  export function Blog(props) {\r\n      const {blog, didReblog, hideActions} = props\r\n      const [actionBlog, setActionBlog] = useState(props.blog ? props.blog : null)\r\n      const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<blogid>\\d+)/)\r\n      const urlBlogId = match ? match.groups.blogid : -1\r\n      const isDetail = `${blog.id}` === `${urlBlogId}`\r\n\r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${blog.id}`\r\n      }\r\n      const handlePerformAction = (newActionBlog, status) => {\r\n        if (status === 200){\r\n          setActionBlog(newActionBlog)\r\n        } else if (status === 201) {\r\n          if (didReblog){\r\n            didReblog(newActionBlog)\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      return <div className={className}>\r\n              <div>\r\n                <p>{blog.id} - {blog.content}</p>\r\n                <ParentBlog blog={blog} />\r\n              </div>\r\n          <div className='btn btn-group'>\r\n          {(actionBlog && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn blog={actionBlog} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn blog={actionBlog} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn blog={actionBlog} didPerformAction={handlePerformAction} action={{type: \"reblog\", display:\"Reblog\"}}/>\r\n                </React.Fragment>\r\n          }\r\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n\r\n      </div>\r\n    }\r\n","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiBlogList} from './lookup'\r\n\r\nimport {Blog} from './detail'\r\n\r\nexport function BlogsList(props) {\r\n    const [blogsInit, setBlogsInit] = useState([])\r\n    const [blogs, setBlogs] = useState([])\r\n    const [blogsDidSet, setBlogsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newBlogs].concat(blogsInit)\r\n      if (final.length !== blogs.length) {\r\n        setBlogs(final)\r\n      }\r\n    }, [props.newBlogs, blogs, blogsInit])\r\n\r\n    useEffect(() => {\r\n      if (blogsDidSet === false){\r\n        const handleBlogListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setBlogsInit(response)\r\n            setBlogsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiBlogList(props.username, handleBlogListLookup)\r\n      }\r\n    }, [blogsInit, blogsDidSet, setBlogsDidSet, props.username])\r\n\r\n\r\n    const handleDidReblog = (newBlog) => {\r\n      const updateBlogsInit = [...blogsInit]\r\n      updateBlogsInit.unshift(newBlog)\r\n      setBlogsInit(updateBlogsInit)\r\n      const updateFinalBlogs = [...blogs]\r\n      updateFinalBlogs.unshift(blogs)\r\n      setBlogs(updateFinalBlogs)\r\n    }\r\n    return blogs.map((item, index)=>{\r\n      return <Blog\r\n        blog={item}\r\n        didReblog={handleDidReblog}\r\n        className='my-5 py-5 border bg-white text-dark'\r\n        key={`${index}-{item.id}`} />\r\n    })\r\n  }\r\n","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {BlogCreate} from './create'\r\nimport {Blog} from './detail'\r\nimport {apiBlogDetail} from './lookup'\r\nimport {BlogsList} from './list'\r\n\r\n\r\nexport function BlogsComponent(props) {\r\n    const [newBlogs, setNewBlogs] = useState([])\r\n    const canBlog = props.canBlog === \"false\" ? false : true\r\n    const handleNewBlog = (newBlog) =>{\r\n      let tempNewBlogs = [...newBlogs]\r\n      tempNewBlogs.unshift(newBlog)\r\n      setNewBlogs(tempNewBlogs)\r\n    }\r\n    return <div className={props.className}>\r\n            {canBlog === true && <BlogCreate didBlog={handleNewBlog} className='col-12 mb-3' />}\r\n          <BlogsList newBlogs={newBlogs} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function BlogDetailComponent(props){\r\n  const {blogId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [blog, setBlog] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setBlog(response)\r\n    } else {\r\n      alert(\"There was an error finding your blog.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didLookup === false){\r\n\r\n      apiBlogDetail(blogId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [blogId, didLookup, setDidLookup])\r\n\r\n  return blog === null ? null : <Blog blog={blog} className={props.className} />\r\n }\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {BlogsComponent} from './blogs'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <BlogsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BlogsComponent, BlogDetailComponent} from './blogs'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst blogsEl = document.getElementById(\"ApexGaming\")\nif (blogsEl) {\n    ReactDOM.render(\n        e(BlogsComponent, blogsEl.dataset), blogsEl);\n}\n\nconst blogDetailElements = document.querySelectorAll(\".ApexGaming-detail\")\n\nblogDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(BlogDetailComponent, container.dataset),\n        container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}